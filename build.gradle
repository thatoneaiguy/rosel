plugins {
	id 'java'
	id 'maven-publish'
	alias libs.plugins.quilt.loom
}

version = "${project.version}+${libs.versions.minecraft.get()}"
group = project.maven_group

repositories {
	mavenLocal()
	maven { url 'https://maven.fabricmc.net/' }
	maven { url 'https://maven.willbl.dev/releases' }	// mialee misc
	maven { url 'https://minecraft.curseforge.com/api/maven'}	// publishing
	maven { url 'https://api.modrinth.com/maven' } //modrinth
	maven { url 'https://maven.terraformersmc.com/' }	// mod menu
	maven { url 'https://maven.jamieswhiteshirt.com/libs-release/'
		content {
			includeGroup 'com.jamieswhiteshirt'
		}
	}
	maven { url 'https://maven.ladysnake.org/releases' } // cca
	maven { url 'https://repo.spongepowered.org/maven/' }
	maven { url 'https://maven.shedaniel.me/' }	// cloth config
	maven { url 'https://masa.dy.fi/maven' }
	maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
	maven { url 'https://oss.sonatype.org/content/repositories/snapshots'
		content {
			includeGroup 'me.lucko'
		}
	}
	maven { url 'https://repo.unascribed.com' }	// ears
	maven {
		name = 'GeckoLib'
		url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/'
	}
}

dependencies {
	minecraft libs.minecraft
	mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }
	modImplementation libs.quilt.loader
	modImplementation libs.quilted.fabric.api
	modImplementation include("xyz.amymialee:mialeemisc:${project.mialeemisc_version}")

	modImplementation "com.terraformersmc:modmenu:4.1.2"

	include modImplementation("com.jamieswhiteshirt:reach-entity-attributes:2.3.0")

	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca_version}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-item:${project.cca_version}"

	modImplementation include ("com.github.Arathain:LodestoneLib-Quilt:${project.lodestone_version}"){ transitive = false }

	modImplementation include("io.github.ladysnake:satin:${project.satin_version}")
	modImplementation include("maven.modrinth:midnightlib:$project.midnightlib_version")

	implementation 'org.jetbrains:annotations:24.0.1'
	implementation 'com.google.code.gson:gson:2.8.8'
	implementation 'org.apache.httpcomponents:httpclient:4.5.13'

	modImplementation 'software.bernie.geckolib:geckolib-fabric-1.19:3.1.40'
}

processResources {
	inputs.property 'version', version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}


tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${archives_base_name}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
